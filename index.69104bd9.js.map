{"mappings":"qhBAAAA,EAAA,S,sBCAA,MAAMC,EAAkBC,SAASC,cAAc,qBAE/CF,EAAgBG,MAAMC,QAAU,OAChCJ,EAAgBG,MAAME,eAAiB,SAEvCC,OAAOC,iBAAiB,QAAQ,WAC9BC,YAAW,WACTR,EAAgBG,MAAMC,QAAU,M,GAC/B,I,ICRL,IAAAK,EAAAV,EAAA,S,wBAGAE,SAASM,iBAAiB,oBAAoB,KAC5C,MAAMG,EAAaT,SAASC,cAAc,gBACpCS,EAAcD,EAAWR,cAAc,uBACvCU,EAAUX,SAASC,cAAc,mBACvCQ,EAAWH,iBAAiB,UAAUM,MAAMC,IAC1CA,EAAEC,iBACF,MAAMC,EAAcL,EAAYM,MAAMC,OAEtC,GADAC,QAAQC,IAAI,gBAAiBJ,GACT,KAAhBA,EAGJ,IACE,MACMK,EAAM,qDADI,4CACkEC,mBAChFN,KAEIO,QAAiBd,EAAAe,QAAMC,IAAIJ,IAC3BK,QAAEA,GAAYH,EAASI,KAC7BR,QAAQC,IAAI,kBAAmBM,GASnC,SAAuBE,GACrB,MAAMC,EAAe,kCACfC,EAASF,EACZG,KAAI,EAACC,GAAEA,EAAEC,YAAEA,EAAWC,eAAEA,EAAcC,aAAEA,KAChC,sEAEkBH,sEAEnBH,EAAeI,WACPC,yGAGcA,iDACKC,oDAKlCC,KAAK,IACRjB,QAAQC,IAAI,oBAAqBU,GACjClB,EAAQyB,UAAYP,C,CA5BlBQ,CAAcZ,E,CACd,MAAOa,GACPpB,QAAQoB,MAAM,yBAA0BA,GACxCC,EAAAC,GAASC,OAAOC,QACd,kD,KA0BN/B,EAAQL,iBAAiB,SAASM,MAAM+B,IACtCA,EAAM7B,iBACN,MAAM8B,EAAaD,EAAME,OAAOC,QAAQ,gBACxC,GAAIF,EAAY,CACHA,EAAWG,QAAQhB,E,IAGhC","sources":["src/index.js","src/js/spinner.js","src/js/search.js"],"sourcesContent":["import './js/footer.js';\nimport './js/cards';\nimport './js/dark-mode';\nimport './js/spinner.js';\nimport './js/search.js';\n\n","const loaderContainer = document.querySelector('.loader-container');\n\nloaderContainer.style.display = 'flex';\nloaderContainer.style.justifyContent = 'center';\n\nwindow.addEventListener('load', function () {\n  setTimeout(function () {\n    loaderContainer.style.display = 'none';\n  }, 500);\n});\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport { openModal } from './cards.js';\ndocument.addEventListener('DOMContentLoaded', () => {\n  const searchForm = document.querySelector('.header-form');\n  const searchInput = searchForm.querySelector('.header-form__input');\n  const gallery = document.querySelector('.galleryPopular');\n  searchForm.addEventListener('submit', async e => {\n    e.preventDefault();\n    const searchQuery = searchInput.value.trim();\n    console.log('Search Query:', searchQuery); // Log the search query\n    if (searchQuery === '') {\n      return;\n    }\n    try {\n      const API_KEY = '904cc36a32d92a605c14a646cc21fc67';\n      const URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(\n        searchQuery\n      )}`;\n      const response = await axios.get(URL);\n      const { results } = response.data;\n      console.log('Search Results:', results); // Log the search results\n      renderGallery(results);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n      Notiflix.Notify.failure(\n        'Failed to fetch movies. Please try again later.'\n      );\n    }\n  });\n  function renderGallery(posters) {\n    const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n    const markup = posters\n      .map(({ id, poster_path, original_title, release_date }) => {\n        return `\n        <div class=\"div-poster\">\n          <a href=\"#\" data-id=\"${id}\" class=\"poster-link\">\n            <img class=\"poster-card\" src=\"${\n              BASE_IMG_URL + poster_path\n            }\" alt=\"${original_title}\" loading=\"lazy\" />\n          </a>\n          <div class=\"info\">\n            <p class=\"info-title\">${original_title}</p>\n            <p class=\"info-genre-year\">${release_date}</p>\n          </div>\n        </div>\n      `;\n      })\n      .join('');\n    console.log('Generated Markup:', markup); // Log the generated HTML markup\n    gallery.innerHTML = markup;\n  }\n  gallery.addEventListener('click', async event => {\n    event.preventDefault();\n    const posterLink = event.target.closest('.poster-link');\n    if (posterLink) {\n      const id = posterLink.dataset.id;\n      \n    }\n  });\n});\n"],"names":["parcelRequire","$00cfbbdd8a53f936$var$loaderContainer","document","querySelector","style","display","justifyContent","window","addEventListener","setTimeout","$2shzp","searchForm","searchInput","gallery","async","e","preventDefault","searchQuery","value","trim","console","log","URL","encodeURIComponent","response","default","get","results","data","posters","BASE_IMG_URL","markup","map","id","poster_path","original_title","release_date","join","innerHTML","renderGallery","error","$parcel$interopDefault","$1GAPJ","Notify","failure","event","posterLink","target","closest","dataset"],"version":3,"file":"index.69104bd9.js.map"}