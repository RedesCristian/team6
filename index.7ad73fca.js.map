{"mappings":"iiBAAAA,EAAA,S,sBCAA,IAAMC,EAAkBC,SAASC,cAAc,qBAE/CF,EAAgBG,MAAMC,QAAU,OAChCJ,EAAgBG,MAAME,eAAiB,SAEvCC,OAAOC,iBAAiB,QAAQ,WAC9BC,YAAW,WACTR,EAAgBG,MAAMC,QAAU,M,GAC/B,I,ICRL,IAAAK,EAAAV,EAAA,S,oDAGAE,SAASM,iBAAiB,oBAAoB,WAC5C,I,EAAMG,EAAaT,SAASC,cAAc,gBACpCS,EAAcD,EAAWR,cAAc,uBACvCU,EAAUX,SAASC,cAAc,mBAwBvC,SAASW,EAAcC,GACrB,IACMC,EAASD,EACZE,KAAI,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAWF,EAAXE,YAAaC,EAAcH,EAAdG,eAAgBC,EAAYJ,EAAZI,aACvC,MAAO,sEAIDC,OAFmBJ,EAAG,sEAGdI,OARG,kCAOIH,EAChB,WAGuBG,OAHdF,EAAe,yGAIIE,OADLF,EAAe,iDACGE,OAAbD,EAAa,iD,IAK/CE,KAAK,IACRC,QAAQC,IAAI,oBAAqBV,GACjCH,EAAQc,UAAYX,C,CA3CtBL,EAAWH,iBAAiB,U,EAAUoB,EAAAlB,EAAA,CAAAkB,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IAEpCC,EAOEC,EAGAC,EACEC,E,qEAZVJ,EAAEK,iBACIJ,EAAcrB,EAAY0B,MAAMC,OACtCd,QAAQC,IAAI,gBAAiBO,GACT,KAAhBA,EAAkB,C,gEAKdC,EAAM,qDAAsEX,OADlE,mCACyD,WAEvEA,OAFgFiB,mBAChFP,I,UAEqBQ,EAAAC,QAAMC,IAAIT,G,QAA3BC,EAAQS,EAAAC,KACRT,EAAcD,EAASW,KAArBV,QACRX,QAAQC,IAAI,kBAAmBU,GAC/BtB,EAAcsB,G,kDAEdX,QAAQsB,MAAM,yBAAwBH,EAAAI,IACtCpB,EAAAqB,GAASC,OAAOC,QACd,mD,mEAnBsCnB,G,kCA6C5CnB,EAAQL,iBAAiB,QAAO,W,MAAEoB,EAAAlB,EAAA,CAAAkB,EAAAC,GAAAC,MAAA,SAAAC,EAAMqB,G,IAEhCC,EAEElC,E,qEAHRiC,EAAMf,mBACAgB,EAAaD,EAAME,OAAOC,QAAQ,iBAC1B,C,sBACNpC,EAAKkC,EAAWG,QAAQrC,G,UACxB,EAAAsC,EAAAC,WAAUvC,G,2DALoBiC,G,gCAAR,G","sources":["src/index.js","src/js/spinner.js","src/js/search.js"],"sourcesContent":["import './js/footer.js';\nimport './js/cards';\nimport './js/dark-mode';\nimport './js/spinner.js';\nimport './js/search.js';\n","const loaderContainer = document.querySelector('.loader-container');\n\nloaderContainer.style.display = 'flex';\nloaderContainer.style.justifyContent = 'center';\n\nwindow.addEventListener('load', function () {\n  setTimeout(function () {\n    loaderContainer.style.display = 'none';\n  }, 500);\n});\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport { openModal } from './cards.js';\ndocument.addEventListener('DOMContentLoaded', () => {\n  const searchForm = document.querySelector('.header-form');\n  const searchInput = searchForm.querySelector('.header-form__input');\n  const gallery = document.querySelector('.galleryPopular');\n  searchForm.addEventListener('submit', async e => {\n    e.preventDefault();\n    const searchQuery = searchInput.value.trim();\n    console.log('Search Query:', searchQuery); // Log the search query\n    if (searchQuery === '') {\n      return;\n    }\n    try {\n      const API_KEY = '904cc36a32d92a605c14a646cc21fc67';\n      const URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(\n        searchQuery\n      )}`;\n      const response = await axios.get(URL);\n      const { results } = response.data;\n      console.log('Search Results:', results); // Log the search results\n      renderGallery(results);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n      Notiflix.Notify.failure(\n        'Failed to fetch movies. Please try again later.'\n      );\n    }\n  });\n  function renderGallery(posters) {\n    const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n    const markup = posters\n      .map(({ id, poster_path, original_title, release_date }) => {\n        return `\n        <div class=\"div-poster\">\n          <a href=\"#\" data-id=\"${id}\" class=\"poster-link\">\n            <img class=\"poster-card\" src=\"${\n              BASE_IMG_URL + poster_path\n            }\" alt=\"${original_title}\" loading=\"lazy\" />\n          </a>\n          <div class=\"info\">\n            <p class=\"info-title\">${original_title}</p>\n            <p class=\"info-genre-year\">${release_date}</p>\n          </div>\n        </div>\n      `;\n      })\n      .join('');\n    console.log('Generated Markup:', markup); // Log the generated HTML markup\n    gallery.innerHTML = markup;\n  }\n  gallery.addEventListener('click', async event => {\n    event.preventDefault();\n    const posterLink = event.target.closest('.poster-link');\n    if (posterLink) {\n      const id = posterLink.dataset.id;\n      await openModal(id);\n    }\n  });\n});\n"],"names":["parcelRequire","$dd8ebecfaae47a78$var$loaderContainer","document","querySelector","style","display","justifyContent","window","addEventListener","setTimeout","$bpxeT","searchForm","searchInput","gallery","renderGallery","posters","markup","map","param","id","poster_path","original_title","release_date","concat","join","console","log","innerHTML","$parcel$interopDefault","$2TvXO","mark","_callee","e","searchQuery","URL","response","results","preventDefault","value","trim","encodeURIComponent","$dIxxU","default","get","_ctx","sent","data","error","t0","$ejkSG","Notify","failure","event","posterLink","target","closest","dataset","$kyW71","openModal"],"version":3,"file":"index.7ad73fca.js.map"}